

<!-- 


The real insight here isn't that AI will replace your work for you. 

Perhaps a typical engineer working on an established system will spend 10% of their time working on tasks that AI tools can complete instantly.



Certain projects become simpler. Businesses that realize this will find themselves with dramatically better internal tools soon. 


The real unlock isn't that the tool completed the core task for me - I still had to optimize the system myself - but the AI protected me from 

It sure would be nice to have X, but I have to context switch to get it 

The real mindset shift isn't 


I think a lot of developers



If you're working on software, and you wish you had a test or utility that enabled X but building it would require context switching or familiarizing yourself with new APIs - you've hit on a place where AI will help you. 





AI tools improve developer quality of life. The noisier things, the things that require context


The marquee example is standalone utilities - including scripts, GUIs, and data transformation functions. 




Examples include
- Standalone utilities, including scripts, GUIs
- Building integration tests from code and sample data
- 








Point 2 - the way to change is to do more of the things that were previously hard but are now easy 












Large codebases are hard

Perhaps we will get there

I've personally found the impact of AI development on my workflow to be quality-of-life


There are certain kinds of workflows that AI development tools make dramatically easier
- building small utilities
- 








Modalities of AI
- autocomplete
- chat and investigation
- composition

Making the Most of AI
- Docs, Tests, Tools
- Generating tests, especially integration tests that require lots of upfront data generation
- Scripts, cli tools, and GUIs are easier to generate than ever
- Use the right kinds of types (datetimes, dataclasses instead of dictionaries, etc)

Tips
- Generate tests at the same time as code
- Context window management is critical, organize code to place relevant context as close together as possible
- Decisions should be as context-independent as possible








Software engineering is changing.

From autocomplete tocode composiion

to prompt-to-app
From copilot to cursor to codeium, AI developer tooling is on the rise.


 -->




<!-- 

There are two core strategies at play - tailoring communication to the audience and avoiding underspecification. 


By switching the frame of reference to the

 saying "I think Bob was right" you can instead say "When Bob told us X last week, I think he was right".

A corollary to this is that communication must be tailored to the audience. 


- understand who you are speaking to
- provide context
- anticipate misunderstanding, be as specific as necessary
- 


 -->









<!-- 
g


often with individuals who may not share a native language.
Remote and async communication have exploded, workplaces have become increasingly culturally and lingually diverse, and modern media has eroded our collective attention span. 

In the face of these headwinds its worth asking - how can I ensure that I am understood when I speak or write? This is important for everyone, but especially critical for people who need to communicate complex (especially technical) concepts in their work.

Let's be clear on one thing first - this is a guide to being understood, and not for writing or speaking well in general. Good communication is understandable but not necessarily interesting or entertaining. 



Effective communication is harder than ever.

Remote and async communication have exploded, workplaces have become increasingly culturally and lingually diverse, and modern media has eroded our collective attention span. 

In the face of these headwinds its worth asking - how can I ensure that I am understood when I speak or write? This is important for everyone, but especially critical for people who need to communicate complex (especially technical) concepts in their work.

Let's be clear on one thing first - this is a guide to being understood, and not for writing or speaking well in general. Good communication is understandable but not necessarily interesting or entertaining. 

The bedrock of effective communication is context. The easiest way to be misunderstood in a world of async communication is to assume that the person you are speaking to has exactly the same context as you.

For example, suppose that last Tuesday Bob said X to you and Sara. If you send Sara an email that says 
```
I think Bob might have been wrong, and the opposite is true instead
```
then it is quite possible that Sara will misunderstand you. Perhaps Sara has had several conversations with Bob that you were not a part of and she doesn't know which of his many opinions you are referring to. She is much more likely to understand an email along the lines of
```
I think Bob might have been wrong when he said X to us last Tuesday in the ABC meeting, and Y is true instead
```

Both messages have the same meaning, but the latter is far harder to misinterpret. By tailoring the communication to the audience and increasing  specificity it's possible to cut down significantly on possible misunderstandings. 


There are two core strategies at play - tailoring communication to the audience and avoiding underspecification. 


By switching the frame of reference to the

 saying "I think Bob was right" you can instead say "When Bob told us X last week, I think he was right".

A corollary to this is that communication must be tailored to the audience. 


- understand who you are speaking to
- provide context
- anticipate misunderstanding, be as specific as necessary
- 


<!-- 

Talking in person is hard enough, but when so much critical communication happens on low bandwidth video calls or written formats like email/slack/teams the bar is hi


Our remote-first world places a higher bar on good communication

Reduction of shared cultural context

Reduced attention spans


Given these challenges --> -->

<!-- 

Talking in person is hard enough, but when so much critical communication happens on low bandwidth video calls or written formats like email/slack/teams the bar is hi


Our remote-first world places a higher bar on good communication

Reduction of shared cultural context

Reduced attention spans


Given these challenges -->